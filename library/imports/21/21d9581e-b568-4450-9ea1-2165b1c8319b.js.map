{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\star.js"],"names":["cc","Class","extends","Component","properties","game","default","type","Node","pickRadius","getPlayerDistance","playerPos","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","gainScore","destroy","onLoad","onCollisionStay","other","self","OnCollisionEnter","update","dt","opacityRatio","timeout","gameDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,cAAK;AACDC,qBAAS,IADR;AAEDC,kBAAMP,GAAGQ;AAFR,SAhBG;AAoBRC,oBAAW;AApBH,KAHP;AAyBLC,uBAAmB,6BAAY;AAC3B;AACA,YAAIC,YAAY,KAAKN,IAAL,CAAUO,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBN,SAAvB,EAAkCO,GAAlC,EAAX;AACA,eAAOJ,IAAP;AACH,KA/BI;;AAiCLK,cAAU,oBAAW;AACjB;AACA,aAAKd,IAAL,CAAUe,YAAV;AACA;AACA,aAAKf,IAAL,CAAUgB,SAAV;AACA;AACA,aAAKN,IAAL,CAAUO,OAAV;AACH,KAxCI;AAyCL;;AAEAC,UA3CK,oBA2CK,CAAE,CA3CP;;AA4CLC,qBAAgB,yBAASC,KAAT,EAAeC,IAAf,EAChB;AACI,aAAKP,QAAL;AACH,KA/CI;AAgDL;AACAQ,sBAAiB,0BAASF,KAAT,EAAeC,IAAf,EAAoB,CAEpC,CAnDI;AAoDLE,UApDK,kBAoDGC,EApDH,EAoDO;AACR;AACA;AACA;AACA;AACA;AACA;AACA,YAAIC,eAAe,IAAI,KAAKzB,IAAL,CAAU0B,OAAV,GAAkB,KAAK1B,IAAL,CAAU2B,YAAnD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKlB,IAAL,CAAUmB,OAAV,GAAoBD,aAAYE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAhC;AACH;AA9DI,CAAT","file":"star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        game:{\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        pickRadius:0\r\n    },\r\n    getPlayerDistance: function () {\r\n        // 根据 player 节点位置判断距离\r\n        var playerPos = this.game.player.getPosition();\r\n        // 根据两点位置计算两点之间距离\r\n        var dist = this.node.position.sub(playerPos).mag();\r\n        return dist;\r\n    },\r\n\r\n    onPicked: function() {\r\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        // 调用 Game 脚本的得分方法\r\n        this.game.gainScore();\r\n        // 然后销毁当前星星节点\r\n        this.node.destroy();\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {},\r\n    onCollisionStay:function(other,self)\r\n    {\r\n        this.onPicked();\r\n    },\r\n    //start () {},\r\n    OnCollisionEnter:function(other,self){\r\n        \r\n    },\r\n    update (dt) {\r\n        // 每帧判断和主角之间的距离是否小于收集距离\r\n        // if (this.getPlayerDistance() < this.pickRadius) {\r\n        //     // 调用收集行为\r\n        //     this.onPicked();\r\n        //     return;\r\n        // }\r\n        var opacityRatio = 1 - this.game.timeout/this.game.gameDuration;\r\n        var minOpacity = 50 ;\r\n        this.node.opacity = minOpacity+ Math.floor(opacityRatio * (255 - minOpacity));\r\n    },\r\n\r\n});\r\n"]}