{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\draw/assets\\scripts\\draw\\arrow.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\draw","sourcesContent":["\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Arrow extends cc.Component {\r\n    private _graphics_strack :cc.Graphics = null;\r\n    private _intervalTI = 0.1\r\n    private _strackLineCount = 20;\r\n    private _G:number = -80;\r\n    private _speed:cc.Vec2 =null;\r\n    private _is_shot:boolean =false;\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this._graphics_strack = this.node.getChildByName(\"graphics\").getComponent(cc.Graphics);\r\n    }\r\n    drawStrack(vecNor:cc.Vec2,length:number){\r\n        //根据朝向计算出夹角弧度\r\n        let vx=cc.v2(0,1); \r\n        let angle =vx.signAngle(vecNor);\r\n        //将弧度转换为欧拉角\r\n        let degree = angle / Math.PI * 180;\r\n        //赋值给节点\r\n        this.node.angle = degree ;\r\n        \r\n        let speed= length;\r\n        let curSpeed=cc.v2(speed*vecNor.x/vecNor.mag(),speed*vecNor.y/vecNor.mag());\r\n        this._speed = curSpeed;\r\n        let pos :cc.Vec2=this.node.parent.convertToWorldSpaceAR(this.node.position);\r\n        let moveX =pos.x;\r\n        let moveY =pos.y;\r\n        this._graphics_strack.clear();\r\n        this._graphics_strack.moveTo(moveX,moveY);\r\n        let interval = this._intervalTI;\r\n        for(let i = 1 ; i < this._strackLineCount ; i++){\r\n            //s =V0*t + 1/2a*T^2;\r\n            moveY =pos.y+curSpeed.y*interval +0.5*this._G*(interval*interval)\r\n            moveX =pos.x+curSpeed.x*interval;\r\n            //curSpeed.y +=this._G* interval;\r\n            if(i%2 == 1)\r\n            {\r\n                this._graphics_strack.lineTo(moveX,moveY);    \r\n                this._graphics_strack.stroke();\r\n            }\r\n            {\r\n                this._graphics_strack.moveTo(moveX,moveY);                \r\n            }\r\n            interval+= this._intervalTI;\r\n        }\r\n    }\r\n    shot(){\r\n        this._is_shot =true;\r\n    }\r\n\r\n    update (dt) {\r\n            if(!this._is_shot) return false;\r\n            //s =V0*t + 1/2a*T^2;\r\n            let time = dt*3;\r\n            let moveY =this._speed.y*time +0.5*this._G*(time*time);\r\n            let moveX =this._speed.x*time;\r\n            this._speed.y += this._G*time;\r\n            let newPos=this.node.position.add(cc.v2(moveX,moveY)); \r\n            let workPos=this.node.parent.convertToWorldSpaceAR(newPos);  //newpos是相当于父类的坐标系坐标 所以要用父类的坐标转化\r\n\r\n            if(workPos.x >960 || workPos.x <0 || workPos.y>640 || workPos.y <0){\r\n                this._is_shot =false;\r\n                this.node.active =false;\r\n                return;\r\n            }\r\n            let vx=cc.v2(0,1); \r\n            let angle =vx.signAngle(this._speed);\r\n            //将弧度转换为欧拉角\r\n            let degree = angle / Math.PI * 180;\r\n            //赋值给节点\r\n            this.node.angle = degree ;\r\n            this.node.position=newPos;\r\n    }\r\n}\r\n"]}